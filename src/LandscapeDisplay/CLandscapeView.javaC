package LandscapeDisplay;

import java.awt.BorderLayout;
import java.math.BigDecimal;

import javax.swing.JPanel;

import SurfacePlot.SurfaceCanvas;

//import org.sf.surfaceplot.SurfaceCanvas;


public class LandscapeView extends JPanel{
	private static final long serialVersionUID = 1L;
	
	
	private JPanel centerPanel;
	private SurfaceCanvas canvas;
	
	public LandscapeView(){
		centerPanel = new JPanel();
		
		double stepSize = 0.1; 
		double[] x = LandscapeView.increment(0.0, stepSize, 1);
		double[] y = LandscapeView.increment(0.0, stepSize, 1);
		
		double[][] gridData = new double[x.length][y.length];		
		for(int i=0;i<x.length;i++)
			for(int j=0;j<y.length;j++)
				gridData[i][j] = 0;
		
		LandscapeSurfaceModel model = new LandscapeSurfaceModel();
		model.setXAxisLabel("X");
		model.setYAxisLabel("Y");
		model.setZAxisLabel("Z");
		model.setXMax(1);
		model.setXMin(0);
		model.setYMax(1);
		model.setYMin(0);
		model.setZMax(1.5f);
		model.setZMin(-1.5f);
		model.setStepSizeX((float) stepSize);
		model.setStepSizeY((float) stepSize);
		model.setGridData(gridData);

		
		canvas = new SurfaceCanvas();
		canvas.setModel(model);
		centerPanel.add(canvas, BorderLayout.CENTER);
		canvas.repaint();
		centerPanel.setVisible(true);
		
	}
	
	
	public LandscapeView(String xlabel, String ylabel, float xmax, float xmin, float ymax, float ymin, float zmax, float zmin, float stepSize, double[][] gridData){
		centerPanel = new JPanel();
		
		LandscapeSurfaceModel model = new LandscapeSurfaceModel();
		model.setXAxisLabel(xlabel);
		model.setYAxisLabel(ylabel);
		model.setZAxisLabel("U");
		model.setXMax(xmax);
		model.setXMin(xmin);
		model.setYMax(ymax);
		model.setYMin(ymin);
		model.setZMax(zmax);
		model.setZMin(zmin);
		model.setStepSizeX(stepSize);
		model.setStepSizeY(stepSize);
		model.setGridData(gridData);
		
		canvas = new SurfaceCanvas();
		canvas.setModel(model);
		centerPanel.add(canvas, BorderLayout.CENTER);
		canvas.repaint();
		centerPanel.setVisible(true);
		
	}
	
	public static double[] increment(double d, double e, double f) {
    	//int length=(int) ((f-d)/e+1);
    	int length = (int) (Math.rint((f-d)/e)+1);
    	double[] temp=new double[length];
    	for (int i = 0; i < temp.length; i++){
    		temp[i]=d+e*i;        		
    	}
		return temp;
	}
	
	
	public JPanel getPanel(){ return centerPanel; }
	public SurfaceCanvas getCanvas(){ return canvas; }
}

